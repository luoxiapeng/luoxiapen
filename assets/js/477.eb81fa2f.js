(window.webpackJsonp=window.webpackJsonp||[]).push([[477],{763:function(t,e,r){"use strict";r.r(e);var n=r(1),_=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"渲染层面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#渲染层面"}},[t._v("#")]),t._v(" 渲染层面")]),t._v(" "),e("p",[t._v("渲染层面的性能优化，无疑是如何让代码解析更好执行更快。因此笔者从以下五方面做出建议。")]),t._v(" "),e("ul",[e("li",[t._v("CSS 策略：基于 CSS 规则")]),t._v(" "),e("li",[t._v("DOM 策略：基于 DOM 操作")]),t._v(" "),e("li",[t._v("阻塞策略：基于脚本加载")]),t._v(" "),e("li",[t._v("回流重绘策略：基于回流重绘")]),t._v(" "),e("li",[t._v("异步更新策略：基于异步更新")])]),t._v(" "),e("p",[t._v("上述五方面都是编写代码时完成，充满在整个项目流程的开发阶段里。因此在开发阶段需时刻注意以下涉及到的每一点，养成良好的开发习惯，性能优化也自然而然被使用上了。")]),t._v(" "),e("p",[t._v("渲染层面的性能优化更多表现在编码细节上，而并非实体代码。简单来说就是遵循某些编码规则，才能将渲染层面的性能优化发挥到最大作用。")]),t._v(" "),e("p",[t._v("回流重绘策略在渲染层面的性能优化里占比较重，也是最常规的性能优化之一。上年笔者发布的掘金小册"),e("a",{attrs:{href:"https://juejin.cn/book/6850413616484040711",target:"_blank",rel:"noopener noreferrer"}},[t._v("《玩转 CSS 的艺术之美》"),e("OutboundLink")],1),t._v("使用一整章讲解回流重绘，本章已开通试读，更多细节请戳"),e("a",{attrs:{href:"https://juejin.cn/book/6850413616484040711/section/6850413616559194119",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("。")])])}),[],!1,null,null,null);e.default=_.exports}}]);