(window.webpackJsonp=window.webpackJsonp||[]).push([[745],{1032:function(t,s,a){"use strict";a.r(s);var n=a(1),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"静态资源和打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态资源和打包"}},[t._v("#")]),t._v(" 静态资源和打包")]),t._v(" "),s("h2",{attrs:{id:"_1-静态资源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-静态资源"}},[t._v("#")]),t._v(" 1.静态资源")]),t._v(" "),s("p",[t._v("（1）直接引入图片\n在网上任意下载一个图片，放到项目中的 static 文件夹下面，然后可以使用下面的引入方法进行引用")]),t._v(" "),s("div",{staticClass:"language-html extra-class"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("img")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("~static/logo.png"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("“~”就相当于定位到了项目根目录，这时候图片路径就不会出现错误，就算打包也是正常的。")]),t._v(" "),s("p",[t._v("（2）CSS 引入图片\n如果在 CSS 中引入图片，方法和 html 中直接引入是一样的，也是用“~”符号引入。")]),t._v(" "),s("div",{staticClass:"language-css extra-class"},[s("pre",{pre:!0,attrs:{class:"language-css"}},[s("code",[t._v("    "),s("span",{pre:!0,attrs:{class:"token selector"}},[t._v("<style>\n      .diss")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("width")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 300px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("height")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 100px"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v("background-image")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token url"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string url"}},[t._v("'~static/logo.png'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    </style>\n")])])]),s("p",[t._v("这时候在 npm run dev 下是完全正常的。")]),t._v(" "),s("h2",{attrs:{id:"_2-打包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-打包"}},[t._v("#")]),t._v(" 2.打包")]),t._v(" "),s("p",[t._v("用 Nuxt.js 制作完成后，你可以打包成静态文件并放在服务器上，进行运行。")]),t._v(" "),s("p",[t._v("在终端中输入：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("    npm run generate\n")])])]),s("p",[t._v("然后在 dist 文件夹下输入 live-server 就可以了。")]),t._v(" "),s("p",[t._v("总结：Nuxt.js 框架非常简单，因为大部分的事情他都为我们做好了，我们只要安装它的规则来编写代码。")])])}),[],!1,null,null,null);s.default=r.exports}}]);