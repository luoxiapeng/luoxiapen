(window.webpackJsonp=window.webpackJsonp||[]).push([[244],{610:function(t,e,a){"use strict";a.r(e);var c=a(1),v=Object(c.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"缓存策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存策略"}},[t._v("#")]),t._v(" 缓存策略")]),t._v(" "),a("p",[t._v("该策略主要围绕浏览器缓存做相关处理，同时也使接入成本最低的性能优化策略。其显著减少网络传输所带来的损耗，提升网页访问速度，是一种很值得使用的性能优化策略。")]),t._v(" "),a("p",[t._v("通过下图可知，为了让浏览器缓存发挥最大作用，该策略尽量遵循以下五点就能发挥浏览器缓存最大作用。")]),t._v(" "),a("ul",[a("li",[t._v("考虑拒绝一切缓存策略：Cache-Control:no-store")]),t._v(" "),a("li",[t._v("考虑资源是否每次向服务器请求：Cache-Control:no-cache")]),t._v(" "),a("li",[t._v("考虑资源是否被代理服务器缓存：Cache-Control:public/private")]),t._v(" "),a("li",[t._v("考虑资源过期时间：Expires:t/Cache-Control:max-age=t,s-maxage=t")]),t._v(" "),a("li",[t._v("考虑协商缓存：Last-Modified/Etag")])]),t._v(" "),a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9f245496e62f4d1f96f48363512267cc~tplv-k3u1fbpfcp-watermark.image"}}),t._v(" "),a("p",[t._v("同时浏览器缓存也是高频面试题之一，笔者觉得上述涉及到的名词在不同语序串联下也能完全理解才能真正弄懂浏览器缓存在性能优化里起到的作用。")]),t._v(" "),a("p",[t._v("缓存策略通过设置 HTTP 报文实现，在形式上分为强缓存/强制缓存和协商缓存/对比缓存。为了方便对比，笔者将某些细节使用图例展示，相信你有更好的理解。")]),t._v(" "),a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5e2572dfb1ee4923a0d3e183c63380b2~tplv-k3u1fbpfcp-watermark.image"}}),t._v(" "),a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fc66368a78e947058b8d816f92b00607~tplv-k3u1fbpfcp-watermark.image"}}),t._v(" "),a("p",[t._v("整个缓存策略机制很明了，先走强缓存，若命中失败才走协商缓存。若命中强缓存，直接使用强缓存；若未命中强缓存，发送请求到服务器检查是否命中协商缓存；若命中协商缓存，服务器返回 304 通知浏览器使用本地缓存，否则返回最新资源。")]),t._v(" "),a("p",[t._v("有两种较常用的应用场景值得使用缓存策略一试，当然更多应用场景都可根据项目需求制定。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("频繁变动资源：设置"),a("code",[t._v("Cache-Control:no-cache")]),t._v("，使浏览器每次都发送请求到服务器，配合"),a("code",[t._v("Last-Modified/ETag")]),t._v("验证资源是否有效")])]),t._v(" "),a("li",[a("p",[t._v("不常变化资源：设置"),a("code",[t._v("Cache-Control:max-age=31536000")]),t._v("，对文件名哈希处理，当代码修改后生成新的文件名，当 HTML 文件引入文件名发生改变才会下载最新文件")])])])])}),[],!1,null,null,null);e.default=v.exports}}]);