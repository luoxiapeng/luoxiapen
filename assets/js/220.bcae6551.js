(window.webpackJsonp=window.webpackJsonp||[]).push([[220],{583:function(t,e,o){"use strict";o.r(e);var n=o(1),a=Object(n.a)({},(function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("h1",{attrs:{id:"非-http-1-1-首部字段"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#非-http-1-1-首部字段"}},[t._v("#")]),t._v(" 非 HTTP/1.1 首部字段")]),t._v(" "),o("p",[t._v("在 HTTP 协议通信交互中使用到的首部字段，不限于 RFC2616 中定义的 47 种首部字段。还有 Cookie、Set-Cookie 和 Content-Disposition 等在其他 RFC 中定义的首部字段，它们的使用频率也很高。\n这些非正式的首部字段统一归纳在 RFC4229 HTTP Header Field Registrations 中。")]),t._v(" "),o("h2",{attrs:{id:"end-to-end-首部和-hop-by-hop-首部"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#end-to-end-首部和-hop-by-hop-首部"}},[t._v("#")]),t._v(" End-to-end 首部和 Hop-by-hop 首部")]),t._v(" "),o("p",[t._v("HTTP 首部字段将定义成缓存代理和非缓存代理的行为，分成 2 种类型。")]),t._v(" "),o("p",[t._v("一种是 End-to-end 首部 和 Hop-by-hop 首部")]),t._v(" "),o("h2",{attrs:{id:"end-to-end-端到端-首部"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#end-to-end-端到端-首部"}},[t._v("#")]),t._v(" End-to-end（端到端） 首部")]),t._v(" "),o("p",[t._v("这些标头必须发送给消息的最终接收者 : 请求的服务器，或响应的客户端。中间代理必须重新传输未经修改的标头，并且缓存必须存储这些信息")]),t._v(" "),o("h2",{attrs:{id:"hop-by-hop-逐跳-首部"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#hop-by-hop-逐跳-首部"}},[t._v("#")]),t._v(" Hop-by-hop（逐跳） 首部")]),t._v(" "),o("p",[t._v("分在此类别中的首部只对单次转发有效，会因通过缓存或代理而不再转发。\n下面列举了 HTTP/1.1 中的逐跳首部字段。除这 8 个首部字段之外，其他所有字段都属于端到端首部。\nConnection、Keep-Alive、Proxy-Authenticate、Proxy-Authorization、Trailer、TE、Transfer-Encoding、Upgrade")])])}),[],!1,null,null,null);e.default=a.exports}}]);