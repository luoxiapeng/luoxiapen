(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{511:function(t,a,s){"use strict";s.r(a);var e=s(1),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"http-版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#http-版本"}},[t._v("#")]),t._v(" HTTP 版本")]),t._v(" "),a("p",[t._v("表示报文使用的 HTTP 协议版本。")]),t._v(" "),a("h2",{attrs:{id:"请求头部"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求头部"}},[t._v("#")]),t._v(" 请求头部")]),t._v(" "),a("p",[t._v("这部分内容只是大致介绍一下，内容较多，后面会再以一篇文章详述")]),t._v(" "),a("p",[t._v("在表述完了起始行之后我们再来看一下请求头部，现在我们向上找，找到"),a("a",{attrs:{href:"http://www.someSchool.edu/someDepartment/home.index",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://www.someSchool.edu/someDepartment/home.index"),a("OutboundLink")],1),t._v("，来看一下它的请求头部")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" www"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("someschool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("edu\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Connection")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" close\nUser"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("agent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Mozilla"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0")]),t._v("\nAccept"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("language"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" fr\n\n")])])]),a("p",[t._v("这个请求头信息比较少，首先 Host 表示的是对象所在的主机。你也许认为这个 Host 是不需要的，因为 URL 不是已经指明了请求对象的路径了吗？这个首部行提供的信息是 Web 代理高速缓存所需要的。Connection: close 表示的是浏览器需要告诉服务器使用的是非持久连接。它要求服务器在发送完响应的对象后就关闭连接。User-agent: 这是请求头用来告诉 Web 服务器，浏览器使用的类型是 Mozilla/5.0，即 Firefox 浏览器。Accept-language 告诉 Web 服务器，浏览器想要得到对象的法语版本，前提是服务器需要支持法语类型，否则将会发送服务器的默认版本。下面我们针对主要的实体字段进行介绍（具体的可以参考 developer.mozilla.org/zh-CN/docs/… MDN 官网学习）")]),t._v(" "),a("p",[t._v("HTTP 的请求标头分为四种： 通用标头、请求标头、响应标头 和 实体标头，依次来进行详解。")]),t._v(" "),a("h2",{attrs:{id:"通用标头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用标头"}},[t._v("#")]),t._v(" 通用标头")]),t._v(" "),a("p",[t._v("通用标头主要有三个，分别是 Date、Cache-Control 和 Connection")]),t._v(" "),a("h2",{attrs:{id:"date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date"}},[t._v("#")]),t._v(" Date")]),t._v(" "),a("p",[t._v("Date 是一个通用标头，它可以出现在请求标头和响应标头中，它的基本表示如下")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Date")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Wed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" Oct "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2015")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("28")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\n")])])]),a("p",[t._v("表示的是格林威治标准时间，这个时间要比北京时间慢八个小时")]),t._v(" "),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/1/10/16f8f773ffc984bc?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"}}),t._v(" "),a("h2",{attrs:{id:"cache-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" Cache-Control")]),t._v(" "),a("p",[t._v("Cache-Control 是一个通用标头，他可以出现在请求标头和响应标头中，Cache-Control 的种类比较多，虽然说这是一个通用标头，但是又一些特性是请求标头具有的，有一些是响应标头才有的。主要大类有 可缓存性、阈值性、 重新验证并重新加载 和其他特性\n可缓存性是唯一响应标头才具有的特性，我们会在响应标头中详述。")]),t._v(" "),a("p",[t._v("阈值性，这个我翻译可能不准确，它的原英文是 Expiration，我是根据它的值来翻译的，你看到这些值可能会觉得我翻译的有点道理")]),t._v(" "),a("ul",[a("li",[t._v("max-age: 资源被认为仍然有效的最长时间，与 Expires 不同，这个请求是相对于 request 标头的时间，而 Expires 是相对于响应标头。（请求标头）")]),t._v(" "),a("li",[t._v("s-maxage: 重写了 max-age 和 Expires 请求头，仅仅适用于共享缓存，被私有缓存所忽略（这块不理解，看完响应头的 Cache-Control 再进行理解）（请求标头）")]),t._v(" "),a("li",[t._v("max-stale：表示客户端将接受的最大响应时间，以秒为单位。（响应标头）")]),t._v(" "),a("li",[t._v("min-fresh: 表示客户端希望响应在指定的最小时间内有效。（响应标头）")])]),t._v(" "),a("h2",{attrs:{id:"connection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#connection"}},[t._v("#")]),t._v(" Connection")]),t._v(" "),a("p",[t._v("Connection 决定当前事务（一次三次握手和四次挥手）完成后，是否会关闭网络连接。Connection 有两种，一种是持久性连接，即一次事务完成后不关闭网络连接")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Connection")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" keep "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" alive\n")])])]),a("p",[t._v("另一种是非持久性连接，即一次事务完成后关闭网络连接")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Connection")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" close\n")])])]),a("p",[t._v("HTTP1.1 其他通用标头")]),t._v(" "),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/1/10/16f8f7740712b503?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"}}),t._v(" "),a("h2",{attrs:{id:"实体标头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实体标头"}},[t._v("#")]),t._v(" 实体标头")]),t._v(" "),a("p",[t._v("实体标头是描述消息正文内容的 HTTP 标头。实体标头用于 HTTP 请求和响应中。头部 Content-Length、 Content-Language、 Content-Encoding 是实体头。")]),t._v(" "),a("ul",[a("li",[t._v("Content-Length 实体报头指示实体主体的大小，以字节为单位，发送到接收方。")]),t._v(" "),a("li",[t._v("Content-Language 实体报头描述了客户端或者服务端能够接受的语言，例如")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Content"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Language"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" de"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DE")]),t._v("\nContent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Language"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" en"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("US")]),t._v("\nContent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Language"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" de"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" en"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CA")]),t._v("\n\n")])])]),a("ul",[a("li",[t._v("Content-Encoding 这又是一个比较麻烦的属性，这个实体报头用来压缩媒体类型。Content-Encoding 指示对实体应用了何种编码。")])]),t._v(" "),a("p",[t._v("常见的内容编码有这几种： gzip、compress、deflate、identity ，这个属性可以应用在请求报文和响应报文中")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Accept"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" gzip"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" deflate "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//请求头")]),t._v("\nContent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Encoding"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" gzip  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//响应头")]),t._v("\n")])])]),a("p",[t._v("下面是一些实体标头字段\n"),a("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2020/1/10/16f8f774025490ef?imageView2/0/w/1280/h/960/format/webp/ignore-error/1"}})]),t._v(" "),a("h2",{attrs:{id:"请求标头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求标头"}},[t._v("#")]),t._v(" 请求标头")]),t._v(" "),a("p",[t._v("上面给出的例子请求报文的属性比较少，下面给出一个 MDN 官网的例子")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("home"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" developer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mozilla"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org\nUser"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Agent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Mozilla"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Macintosh"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" Intel Mac "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OS")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("X")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" rv"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50.0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" Gecko"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20100101")]),t._v(" Firefox"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50.0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Accept")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("application"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xhtml"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("application"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("q"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate, br\nReferer: https://developer.mozilla.org/testpage.html\nConnection: keep-alive\nUpgrade-Insecure-Requests: 1\nIf-Modified-Since: Mon, 18 Jul 2016 02:36:04 GMT\nIf-None-Match: "c561c68d0ba92bbeb8b0fff2a9199f722e3a621a"\nCache-Control: max-age=0\n\n')])])])]),a("h2",{attrs:{id:"host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#host"}},[t._v("#")]),t._v(" Host")]),t._v(" "),a("p",[t._v("Host 请求头指明了服务器的域名（对于虚拟主机来说），以及（可选的）服务器监听的 TCP 端口号。如果没有给定端口号，会自动使用被请求服务的默认端口（比如请求一个 HTTP 的 URL 会自动使用 80 作为端口）。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" developer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mozilla"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org\n")])])]),a("p",[t._v("上面的 Accpet、 Accept-Language、Accept-Encoding 都是属于内容协商的请求标头，我们会在下面说明")]),t._v(" "),a("h2",{attrs:{id:"referer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#referer"}},[t._v("#")]),t._v(" Referer")]),t._v(" "),a("p",[t._v("HTTP Referer 属性是请求标头的一部分，当浏览器向 web 服务器发送请求的时候，一般会带上 Referer，告诉服务器该网页是从哪个页面链接过来的，服务器因此可以获得一些信息用于处理。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Referer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("developer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mozilla"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("org"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("testpage"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html\n")])])]),a("h2",{attrs:{id:"upgrade-insecure-requests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#upgrade-insecure-requests"}},[t._v("#")]),t._v(" Upgrade-Insecure-Requests")]),t._v(" "),a("p",[t._v("Upgrade-Insecure-Requests 是一个请求标头，用来向服务器端发送信号，表示客户端优先选择加密及带有身份验证的响应。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Upgrade"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Insecure"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Requests"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("h2",{attrs:{id:"if-modified-since"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-modified-since"}},[t._v("#")]),t._v(" If-Modified-Since")]),t._v(" "),a("p",[t._v("HTTP 的 If-Modified-Since 使其成为条件请求：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("返回 200，只有在给定日期的最后一次修改资源后，服务器才会以 200 状态发送回请求的资源。")])]),t._v(" "),a("li",[a("p",[t._v("如果请求从开始以来没有被修改过，响应会返回 304 并且没有任何响应体")])])]),t._v(" "),a("p",[t._v("If-Modified-Since 通常会与 If-None-Match 搭配使用，If-Modified-Since 用于确认代理或客户端拥有的本地资源的有效性。获取资源的更新日期时间，可通过确认首部字段 Last-Modified 来确定。")]),t._v(" "),a("p",[t._v("大白话说就是如果在 Last-Modified 之后更新了服务器资源，那么服务器会响应 200，如果在 Last-Modified 之后没有更新过资源，则返回 304。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("If"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Modified"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Since"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Mon"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" Jul "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2016")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("36")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("04")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("\n")])])]),a("h2",{attrs:{id:"if-none-match"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if-none-match"}},[t._v("#")]),t._v(" If-None-Match")]),t._v(" "),a("p",[t._v("If-None-Match HTTP 请求标头使请求成为条件请求。 对于 GET 和 HEAD 方法，仅当服务器没有与给定资源匹配的 ETag 时，服务器才会以 200 状态发送回请求的资源。 对于其他方法，仅当最终现有资源的 ETag 与列出的任何值都不匹配时，才会处理请求。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("If"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("None"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Match"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"c561c68d0ba92bbeb8b0fff2a9199f722e3a621a"')]),t._v("\n\n")])])]),a("p",[t._v("ETag 属于响应标头，后面进行介绍。")])])}),[],!1,null,null,null);a.default=r.exports}}]);