(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{429:function(t,e,n){"use strict";n.r(e);var u=n(1),v=Object(u.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"flutter-基础-widget-菜单按钮"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#flutter-基础-widget-菜单按钮"}},[t._v("#")]),t._v(" Flutter 基础 Widget —— 菜单按钮")]),t._v(" "),n("p",[t._v("本节讲 Flutter 菜单按钮的使用。")]),t._v(" "),n("p",[t._v("菜单按钮的 Widget 是："),n("a",{attrs:{href:"https://docs.flutter.io/flutter/material/PopupMenuButton-class.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("PopupMenuButton"),n("OutboundLink")],1)]),t._v(" "),n("h1",{attrs:{id:"popupmenubutton"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#popupmenubutton"}},[t._v("#")]),t._v(" PopupMenuButton")]),t._v(" "),n("p",[t._v("PopupMenuButton 是一个按钮，当你点击按钮的时候，就会弹出类似 Android 选项菜单的框。")]),t._v(" "),n("h2",{attrs:{id:"代码所在位置"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码所在位置"}},[t._v("#")]),t._v(" 代码所在位置")]),t._v(" "),n("p",[t._v("flutter_widget_demo/lib/menu/PopupMenuButtonWidget.dart")]),t._v(" "),n("h2",{attrs:{id:"popupmenubutton-的快速上手"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#popupmenubutton-的快速上手"}},[t._v("#")]),t._v(" PopupMenuButton 的快速上手")]),t._v(" "),n("p",[t._v("PopupMenuButton 是点击后会弹出菜单选项的按钮，其 child 参数是用来显示按钮的内容，itemBuilder 参数是用来显示弹出的菜单，onSelected 参数用于处理菜单点击事件：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("PopupMenuButton<MenuItem>(\n    child: Text('更多'),\n    onSelected: (MenuItem result) {\n      print('click '+result.toString());\n    },\n    itemBuilder: (BuildContext context) => <PopupMenuEntry<MenuItem>>[\n      const PopupMenuItem<MenuItem>(\n        value: MenuItem.menuA,\n        child: Text('menu A'),\n      ),\n      const PopupMenuItem<MenuItem>(\n        value: MenuItem.menuB,\n        child: Text('menu B'),\n      ),\n      const PopupMenuItem<MenuItem>(\n        value: MenuItem.menuC,\n        child: Text('menu C'),\n      ),\n      const PopupMenuItem<MenuItem>(\n        value: MenuItem.menuD,\n        child: Text('menu D'),\n      ),\n    ],\n  )\n")])])]),n("p",[t._v("PopupMenuButton 在一个页面使用的完整 Demo 如下：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("import 'package:flutter/material.dart';\n\nvoid main() => runApp(PopupMenuButtonWidget());\n\nclass PopupMenuButtonWidget extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: \"Flutter Demo\",\n      theme: ThemeData(\n        primaryColor: Colors.blue,\n      ),\n      home: Scaffold(\n          appBar: AppBar(title: Text(\"Flutter UI基础Widget -- 按钮\")),\n          body: PopupMenuButton<MenuItem>(\n            child: Text('更多'),\n            onSelected: (MenuItem result) {\n              print('click '+result.toString());\n            },\n            itemBuilder: (BuildContext context) => <PopupMenuEntry<MenuItem>>[\n                  const PopupMenuItem<MenuItem>(\n                    value: MenuItem.menuA,\n                    child: Text('menu A'),\n                  ),\n                  const PopupMenuItem<MenuItem>(\n                    value: MenuItem.menuB,\n                    child: Text('menu B'),\n                  ),\n                  const PopupMenuItem<MenuItem>(\n                    value: MenuItem.menuC,\n                    child: Text('menu C'),\n                  ),\n                  const PopupMenuItem<MenuItem>(\n                    value: MenuItem.menuD,\n                    child: Text('menu D'),\n                  ),\n                ],\n          )),\n    );\n  }\n}\n\nenum MenuItem { menuA, menuB, menuC, menuD }\n")])])]),n("p",[t._v("运行后有一个更多的按钮，点击这个按钮，会展开菜单：")]),t._v(" "),n("p",[n("img",{attrs:{src:"https://user-gold-cdn.xitu.io/2019/3/17/169874d66f279152?w=706&h=500&f=jpeg&s=37083",alt:""}})]),t._v(" "),n("h4",{attrs:{id:"菜单选择"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#菜单选择"}},[t._v("#")]),t._v(" 菜单选择")]),t._v(" "),n("p",[t._v("如何知道选中了哪个菜单呢？")]),t._v(" "),n("p",[t._v("在 onSelected 里会返回选中的菜单：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("onSelected: (MenuItem result) {\n  print('click '+result.toString());\n},\n")])])]),n("h2",{attrs:{id:"popupmenubutton-的构造函数及参数说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#popupmenubutton-的构造函数及参数说明"}},[t._v("#")]),t._v(" PopupMenuButton 的构造函数及参数说明")]),t._v(" "),n("p",[t._v("PopupMenuButton 的构造函数为：")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("class PopupMenuButton<T> extends StatefulWidget {\n  const PopupMenuButton({\n    Key key,\n    @required this.itemBuilder,\n    this.initialValue,\n    this.onSelected,\n    this.onCanceled,\n    this.tooltip,\n    this.elevation = 8.0,\n    this.padding = const EdgeInsets.all(8.0),\n    this.child,\n    this.icon,\n    this.offset = Offset.zero,\n  }) : assert(itemBuilder != null),\n       assert(offset != null),\n       assert(!(child != null && icon != null)), // fails if passed both parameters\n       super(key: key);\n    ...\n}\n")])])]),n("table",[n("thead",[n("tr",[n("th",[t._v("参数名字")]),t._v(" "),n("th",[t._v("参数类型")]),t._v(" "),n("th",[t._v("意义")]),t._v(" "),n("th",[t._v("必选 or 可选")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("key")]),t._v(" "),n("td",[t._v("Key")]),t._v(" "),n("td",[t._v("Widget 的标识")]),t._v(" "),n("td",[t._v("可选")])]),t._v(" "),n("tr",[n("td",[t._v("itemBuilder")]),t._v(" "),n("td",[t._v("PopupMenuItemBuilder"),n("code",[t._v("<T>")])]),t._v(" "),n("td",[t._v("要显示的菜单")]),t._v(" "),n("td",[t._v("必选")])]),t._v(" "),n("tr",[n("td",[t._v("initialValue")]),t._v(" "),n("td",[t._v("T")]),t._v(" "),n("td",[t._v("初始化的菜单项"),n("code",[t._v("<br>")]),t._v("如果有，在菜单打开时会突出显示。")]),t._v(" "),n("td",[t._v("可选")])]),t._v(" "),n("tr",[n("td",[t._v("onSelected")]),t._v(" "),n("td",[t._v("PopupMenuItemSelected"),n("code",[t._v("<T>")])]),t._v(" "),n("td",[t._v("当用户从此按钮创建的弹出菜单中选择一个值时调用。")]),t._v(" "),n("td",[t._v("可选")])]),t._v(" "),n("tr",[n("td",[t._v("onCanceled")]),t._v(" "),n("td",[t._v("PopupMenuItemSelected"),n("code",[t._v("<T>")])]),t._v(" "),n("td",[t._v("当用户在不选择项目的情况下关闭弹出菜单时调用。")]),t._v(" "),n("td",[t._v("可选")])]),t._v(" "),n("tr",[n("td",[t._v("tooltip")]),t._v(" "),n("td",[t._v("String")]),t._v(" "),n("td",[t._v("当长按时显示的文本，用于盲人辅助模式下")]),t._v(" "),n("td",[t._v("可选")])]),t._v(" "),n("tr",[n("td",[t._v("elevation")]),t._v(" "),n("td",[t._v("double")]),t._v(" "),n("td",[t._v("Button 相对于其父级放置的 z 坐标，这可以控制 menu 下的阴影大小"),n("code",[t._v("<br>")]),t._v("默认值为 8.0，该值必须>=0")]),t._v(" "),n("td",[t._v("可选")])]),t._v(" "),n("tr",[n("td",[t._v("padding")]),t._v(" "),n("td",[t._v("EdgeInsetsGeometry")]),t._v(" "),n("td",[t._v("menu 的内边距")]),t._v(" "),n("td",[t._v("可选")])]),t._v(" "),n("tr",[n("td",[t._v("child")]),t._v(" "),n("td",[t._v("Widget")]),t._v(" "),n("td",[t._v("这个按钮里显示的内容")]),t._v(" "),n("td",[t._v("可选")])]),t._v(" "),n("tr",[n("td",[t._v("icon")]),t._v(" "),n("td",[t._v("Icon")]),t._v(" "),n("td",[t._v("这个按钮里显示的 Icon Widget，前面在 图片框和 Icon 一节讲过如何使用 Icon Widget")]),t._v(" "),n("td",[t._v("可选")])]),t._v(" "),n("tr",[n("td",[t._v("offset")]),t._v(" "),n("td",[t._v("Offset")]),t._v(" "),n("td",[t._v("menu 相对按钮的偏移量")]),t._v(" "),n("td",[t._v("可选")])])])])])}),[],!1,null,null,null);e.default=v.exports}}]);