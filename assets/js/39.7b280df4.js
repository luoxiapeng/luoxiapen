(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{408:function(t,s,n){"use strict";n.r(s);var a=n(1),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"映射-maps-是无序的键值对"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#映射-maps-是无序的键值对"}},[t._v("#")]),t._v(" 映射(Maps)是无序的键值对")]),t._v(" "),n("h2",{attrs:{id:"常用属性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用属性"}},[t._v("#")]),t._v(" 常用属性")]),t._v(" "),n("ul",[n("li",[t._v("keys 获取所有的 key 值")]),t._v(" "),n("li",[t._v("values 获取所有的 value 值")]),t._v(" "),n("li",[t._v("isEmpty 是否为空")]),t._v(" "),n("li",[t._v("isNotEmpty 是否不为空")])]),t._v(" "),n("h2",{attrs:{id:"常用方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),n("ul",[n("li",[t._v("remove(key) 删除指定 key 的数据")]),t._v(" "),n("li",[t._v("addAll({...}) 合并映射 给映射内增加属性")]),t._v(" "),n("li",[t._v("containsValue 查看映射内的值 返回 true/false")]),t._v(" "),n("li",[t._v("forEach")]),t._v(" "),n("li",[t._v("map")]),t._v(" "),n("li",[t._v("where")]),t._v(" "),n("li",[t._v("any")]),t._v(" "),n("li",[t._v("every")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Map person={")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   "name":"张三",')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   "age":20')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// };")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var m=new Map();")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// m["name"]="李四";')]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(person);")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(m);")]),t._v("\n\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//常用属性：")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Map person={")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   "name":"张三",')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   "age":20,')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   "sex":"男"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// };")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(person.keys.toList());")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(person.values.toList());")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(person.isEmpty);")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(person.isNotEmpty);")]),t._v("\n\n\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//常用方法：")]),t._v("\n    Map person"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sex"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"男"')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person.addAll({")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   \"work\":['敲代码','送外卖'],")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   "height":160')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(person);")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// person.remove("sex");')]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(person);")]),t._v("\n\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("person"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"foreach-map-where-any-every"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#foreach-map-where-any-every"}},[t._v("#")]),t._v(" forEach ,map ,where ,any ,every")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  List myList=['香蕉','苹果','西瓜'];")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for(var i=0;i<myList.length;i++){")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   print(myList[i]);")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for(var item in myList){")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   print(item);")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myList.forEach((value){")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//     print("$value");')]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List myList=[1,3,4];")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List newList=new List();")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for(var i=0;i<myList.length;i++){")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   newList.add(myList[i]*2);")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(newList);")]),t._v("\n\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List myList=[1,3,4];")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var newList=myList.map((value){")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     return value*2;")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  print(newList.toList());")]),t._v("\n\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List myList=[1,3,4,5,7,8,9];")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var newList=myList.where((value){")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     return value>5;")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(newList.toList());")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List myList=[1,3,4,5,7,8,9];")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var f=myList.any((value){   //只要集合里面有满足条件的就返回true")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     return value>5;")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(f);")]),t._v("\n\n\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List myList=[1,3,4,5,7,8,9];")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var f=myList.every((value){   //每一个都满足条件返回true  否则返回false")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//     return value>5;")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// });")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(f);")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var s=new Set();")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// s.addAll([1,222,333]);")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// s.forEach((value)=>print(value));")]),t._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//map")]),t._v("\n       Map person"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"张三"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        person"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$key---$value"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);