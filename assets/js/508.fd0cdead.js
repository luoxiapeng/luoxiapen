(window.webpackJsonp=window.webpackJsonp||[]).push([[508],{795:function(a,t,e){"use strict";e.r(t);var r=e(1),l=Object(r.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"lerna-介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lerna-介绍"}},[a._v("#")]),a._v(" lerna 介绍")]),a._v(" "),t("h2",{attrs:{id:"什么是-lerna-为什么要使用-lerna"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是-lerna-为什么要使用-lerna"}},[a._v("#")]),a._v(" 什么是 lerna?为什么要使用 lerna?")]),a._v(" "),t("p",[a._v("lerna 到底是什么呢？lerna 官网上是这样描述的。")]),a._v(" "),t("blockquote",[t("p",[a._v("A tool for managing JavaScript projects with multiple packages.")])]),a._v(" "),t("p",[a._v("这个介绍可以说很清晰了，引入 lerna 后，上面提到的问题不仅迎刃而解，更为开发人员提供了一种管理多 packages javascript 项目的方式。")]),a._v(" "),t("ul",[t("li",[a._v("自动解决 packages 之间的依赖关系")]),a._v(" "),t("li",[a._v("通过 git 检测文件改动，自动发布")]),a._v(" "),t("li",[a._v("根据 git 提交记录，自动生成 CHANGELOG")])]),a._v(" "),t("h2",{attrs:{id:"使用-lerna-的基本工作流"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-lerna-的基本工作流"}},[a._v("#")]),a._v(" 使用 lerna 的基本工作流")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("Git 在一个 lerna 工程里，是通过 git 来进行代码管理的。所以你首先要确保本地有正确的 git 环境。 如果需要多人协作开发，请先创建正确的 git 中心仓库的链接。 因此需要你了解基本的 git 操作，在此不再赘述。")])]),a._v(" "),t("li",[t("p",[a._v("npm 仓库 无论你管理的 package 是要发布到官网还是公司的私有服务器上，都需要正确的仓库地址和用户名。 你可运行下方的命令来检查，本地的 npm registry 地址是否正确。")])])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("npm config ls\n")])])]),t("ul",[t("li",[a._v("lerna 你需要全局安装 lerna 工具。")])]),a._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[a._v("npm install lerna "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("g\n")])])])])}),[],!1,null,null,null);t.default=l.exports}}]);