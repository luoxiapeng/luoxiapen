(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{593:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"nginx-设置虚拟主机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nginx-设置虚拟主机"}},[t._v("#")]),t._v(" Nginx 设置虚拟主机")]),t._v(" "),a("p",[t._v("虚拟主机是指在一台物理主机服务器上划分出多个磁盘空间，每个磁盘空间都是一个虚拟主机，每台虚拟主机都可以对外提供 Web 服务，并且互不干扰。在外界看来，虚拟主机就是一台独立的服务器主机，这意味着用户能够利用虚拟主机把多个不同域名的网站部署在同一台服务器上，而不必再为简历一个网站单独购买一台服务器，既解决了维护服务器技术的难题，同时又极大地节省了服务器硬件成本和相关的维护费用。")]),t._v(" "),a("p",[t._v("配置虚拟主机可以基于端口号、基于 IP 和基于域名，这节课我们先学习基于端口号来设置虚拟主机。")]),t._v(" "),a("h2",{attrs:{id:"基于端口号配置虚拟主机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于端口号配置虚拟主机"}},[t._v("#")]),t._v(" 基于端口号配置虚拟主机")]),t._v(" "),a("p",[t._v("基于端口号来配置虚拟主机，算是 Nginx 中最简单的一种方式了。原理就是 Nginx 监听多个端口，根据不同的端口号，来区分不同的网站。")]),t._v(" "),a("p",[t._v("我们可以直接配置在主文件里"),a("code",[t._v("etc/nginx/nginx.conf")]),t._v("文件里， 也可以配置在子配置文件里"),a("code",[t._v("etc/nginx/conf.d/default.conf")]),t._v("。我这里为了配置方便，就配置在子文件里了。当然你也可以再新建一个文件，只要在 conf.d 文件夹下就可以了。")]),t._v(" "),a("p",[t._v("修改配置文件中的 server 选项，这时候就会有两个 server。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("    server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            listen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8001")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            server_name localhost"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("share"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html8001"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("编在"),a("code",[t._v("usr/share/nginx/html/html8001/")]),t._v("目录下的 index.html 文件并查看结果。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("welcome port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8001")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("h1"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("最后在浏览器中分别访问地址和带端口的地址。看到的结果是不同的。")]),t._v(" "),a("p",[t._v("然后我们就可以在浏览器中访问"),a("code",[t._v("http://112.74.164.244:8001")]),t._v("了，当然你的 IP 跟这个肯定不一样，这个 IP 过几天就会过期的。")]),t._v(" "),a("h2",{attrs:{id:"基于-ip-的虚拟主机"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基于-ip-的虚拟主机"}},[t._v("#")]),t._v(" 基于 IP 的虚拟主机")]),t._v(" "),a("p",[t._v("基于 IP 和基于端口的配置几乎一样，只是把"),a("code",[t._v("server_name")]),t._v("选项，配置成 IP 就可以了。")]),t._v(" "),a("p",[t._v("比如上面的配置，我们可以修改为：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("    server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            listen "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            server_name "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("112.74")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".164")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".244")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            root "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("share"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html8001"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这种演示需要多个 IP 的支持，由于我们的阿里 ECS 只提供了一个 IP，所以这里就不给大家演示了，如果工作中用到，只要安装这种方法配置就可以了。")])])}),[],!1,null,null,null);s.default=e.exports}}]);