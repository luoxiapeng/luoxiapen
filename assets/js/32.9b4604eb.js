(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{321:function(e,t,l){"use strict";l.r(t);var v=l(1),_=Object(v.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"es语法中reflect的操作方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#es语法中reflect的操作方法"}},[e._v("#")]),e._v(" es语法中Reflect的操作方法")]),e._v(" "),t("p",[e._v("在ES中，Reflect是一个内置对象，用于将JavaScript操作进行封装和抽象化。下面是Reflect操作的一些方法：")]),e._v(" "),t("ul",[t("li",[e._v("Reflect.apply()：调用一个函数，并传递一个给定的上下文和参数。")]),e._v(" "),t("li",[e._v("Reflect.construct()：以给定的构造函数作为原型创建一个新的对象实例，并传递给定的参数")]),e._v(" "),t("li",[e._v("Reflect.defineProperty()：定义一个对象的属性，并在需要的情况下返回一个布尔值")]),e._v(" "),t("li",[e._v("Reflect.deleteProperty()：删除一个对象的属性，并在需要的情况下返回一个布尔值。")]),e._v(" "),t("li",[e._v("Reflect.get()：从一个对象获取一个属性的值")]),e._v(" "),t("li",[e._v("Reflect.getOwnPropertyDescriptor()：获取一个对象的属性描述符。")]),e._v(" "),t("li",[e._v("Reflect.getPrototypeOf()：获取一个对象的原型。")]),e._v(" "),t("li",[e._v("Reflect.has()：检查一个对象是否具有给定名称的属性。")]),e._v(" "),t("li",[e._v("Reflect.isExtensible()：确定一个对象是否可扩展。")]),e._v(" "),t("li",[e._v("Reflect.ownKeys()：获取一个对象的自有属性的名称数组。")]),e._v(" "),t("li",[e._v("Reflect.preventExtensions()：禁止一个对象扩展。")]),e._v(" "),t("li",[e._v("Reflect.set()：设置一个对象的属性的值。")]),e._v(" "),t("li",[e._v("Reflect.setPrototypeOf()：为一个对象设置原型。")])])])}),[],!1,null,null,null);t.default=_.exports}}]);