(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{325:function(t,s,n){"use strict";n.r(s);var a=n(1),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),s("h2",{attrs:{id:"list-里面常用的属性和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list-里面常用的属性和方法"}},[t._v("#")]),t._v(" List 里面常用的属性和方法")]),t._v(" "),s("p",[t._v("常用属性")]),t._v(" "),s("ul",[s("li",[t._v("length 长度")]),t._v(" "),s("li",[t._v("reversed 翻转")]),t._v(" "),s("li",[t._v("isEmpty 是否为空")]),t._v(" "),s("li",[t._v("isNotEmpty 是否不为空")])]),t._v(" "),s("h2",{attrs:{id:"常用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用方法"}},[t._v("#")]),t._v(" 常用方法")]),t._v(" "),s("ul",[s("li",[t._v("add 增加")]),t._v(" "),s("li",[t._v("addAll 拼接数组")]),t._v(" "),s("li",[t._v("indexOf 查找 传入具体值")]),t._v(" "),s("li",[t._v("remove 删除 传入具体值")]),t._v(" "),s("li",[t._v("removeAt 删除 传入索引值")]),t._v(" "),s("li",[t._v("fillRange 修改")]),t._v(" "),s("li",[t._v("insert(index,value); 指定位置插入")]),t._v(" "),s("li",[t._v("insertAll(index,list) 指定位置插入 List")]),t._v(" "),s("li",[t._v("toList() 其他类型转换成 List")]),t._v(" "),s("li",[t._v("join() List 转换成字符串")]),t._v(" "),s("li",[t._v("split() 字符串转化成 List")]),t._v(" "),s("li",[t._v("forEach")]),t._v(" "),s("li",[t._v("map")]),t._v(" "),s("li",[t._v("where")]),t._v(" "),s("li",[t._v("any")]),t._v(" "),s("li",[t._v("every")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List myList=['香蕉','苹果','西瓜'];")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(myList[1]);")]),t._v("\n\n\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var list=new List();")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list.add('111');")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list.add('222');")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(list);")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//List里面的属性：")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List myList=['香蕉','苹果','西瓜'];")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(myList.length);")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(myList.isEmpty);")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(myList.isNotEmpty);")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(myList.reversed);  //对列表倒序排序")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var newMyList=myList.reversed.toList();")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(newMyList);")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//List里面的方法：")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List myList=['香蕉','苹果','西瓜'];")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//myList.add('桃子');   //增加数据  增加一个")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myList.addAll(['桃子','葡萄']);  //拼接数组")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(myList);")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//print(myList.indexOf('苹x果'));    //indexOf查找数据 查找不到返回-1  查找到返回索引值")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myList.remove('西瓜');")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myList.removeAt(1);")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(myList);")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List myList=['香蕉','苹果','西瓜'];")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myList.fillRange(1, 2,'aaa');  //修改")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//  myList.fillRange(1, 3,'aaa');")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myList.insert(1,'aaa');      //插入  一个")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// myList.insertAll(1, ['aaa','bbb']);  //插入 多个")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(myList);")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// List myList=['香蕉','苹果','西瓜'];")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var str=myList.join('-');   //list转换成字符串")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(str);")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(str is String);  //true")]),t._v("\n\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" str"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'香蕉-苹果-西瓜'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" list"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("list is List"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("h2",{attrs:{id:"set-方式去重"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-方式去重"}},[t._v("#")]),t._v(" Set 方式去重")]),t._v(" "),s("p",[t._v("用它最主要的功能就是去除数组重复内容，\nSet 是没有顺序且不能重复的集合，所以不能通过索引去获取值")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// var s=new Set();")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// s.add('香蕉');")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// s.add('苹果');")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// s.add('苹果');")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(s);   //{香蕉, 苹果}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print(s.toList());")]),t._v("\n\n  List myList"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'香蕉'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'苹果'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'西瓜'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'香蕉'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'苹果'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'香蕉'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'苹果'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" s"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAll")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myList"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("toList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);