(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{547:function(t,a,s){"use strict";s.r(a);var v=s(42),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),s("ul",[s("li",[t._v("参数列表必须相同")]),t._v(" "),s("li",[t._v("重载和参数变量名无关")]),t._v(" "),s("li",[t._v("重载和返回值类型无关")]),t._v(" "),s("li",[t._v("重载和修饰符无关")])]),t._v(" "),s("h2",{attrs:{id:"方法调用的参数传递问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法调用的参数传递问题"}},[t._v("#")]),t._v(" 方法调用的参数传递问题")]),t._v(" "),s("ul",[s("li",[t._v("传递的值如果是数组等引用类型，会改变对应的值")]),t._v(" "),s("li",[t._v("如果是普通类型的，改变不了对应的值")])]),t._v(" "),s("h2",{attrs:{id:"方法的调用三种格式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法的调用三种格式"}},[t._v("#")]),t._v(" 方法的调用三种格式")]),t._v(" "),s("ul",[s("li",[t._v("单独调用，方法名称")]),t._v(" "),s("li",[t._v("打印调用")]),t._v(" "),s("li",[t._v("赋值调用")])]),t._v(" "),s("p",[t._v("注意：返回值为 void 只能为赋值调用，不能为打印调用")]),t._v(" "),s("p",[t._v("如果 void 不写 return")]),t._v(" "),s("p",[t._v("对于有返回值的方法，可以使用单独调用，打印调用和赋值调用\n但是对于无返回值的方法，只能单独调用，不能使用打印调用或者赋值调用")]),t._v(" "),s("p",[t._v("使用方法的注意事项：")]),t._v(" "),s("ol",[s("li",[t._v("方法应该定义在类当中，当时不能在方法当中再定义方阿飞")]),t._v(" "),s("li",[t._v("方法定义的前后顺序无所谓")]),t._v(" "),s("li",[t._v("方法定义之后不会执行，如果希望执行，一定要调用，单独调用，打印调用，赋值调用")]),t._v(" "),s("li",[t._v("如果方法有返回值，必须写上 return，返回值不能没有")]),t._v(" "),s("li",[t._v("对于一个 void 方法当中最后一行 return 可以不写")])]),t._v(" "),s("h2",{attrs:{id:"方法重载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法重载"}},[t._v("#")]),t._v(" 方法重载")]),t._v(" "),s("p",[t._v("overload：多个方法的名称一样，但是参数列表不一样")]),t._v(" "),s("p",[t._v("好处：只需要记住唯一一个方法名称，就可以实现类似多个功能")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" c"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("方法的重载与下列有关于：")]),t._v(" "),s("ol",[s("li",[t._v("参数的个数不同")]),t._v(" "),s("li",[t._v("参数类型不同")]),t._v(" "),s("li",[t._v("参数的多类型顺序")]),t._v(" "),s("li",[t._v("与参数的名称无关")]),t._v(" "),s("li",[t._v("与方法的返回值无关")])])])}),[],!1,null,null,null);a.default=_.exports}}]);